{"version":3,"sources":["webpack:///src/app/addtodo/addtodo.page.html","webpack:///src/app/addtodo/addtodo-routing.module.ts","webpack:///src/app/addtodo/addtodo.module.ts","webpack:///src/app/addtodo/addtodo.page.scss","webpack:///src/app/addtodo/addtodo.page.ts"],"names":["routes","path","component","AddtodoPageRoutingModule","imports","forChild","exports","AddtodoPageModule","declarations","Storage","AddtodoPage","activatedRoute","http","toastController","router","id","user","name","email","password","phone","api_token","date_of_birth","gender","hospital_id","snapshot","paramMap","get","getUser","getCategories","headers","options","post","subscribe","resp","proccess","err","showError","console","log","category","todo_category_id","proccess_sub","categories","data","sub_categories","create","message","duration","toast","present","undefined","sub_category_other","sub_category","sub_category_other_input","category_id","sub_category_id","proccess_todo","navigate","key","ret","JSON","parse","value","selector","template"],"mappings":"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","file":"addtodo-addtodo-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"danger\\\">\\n\\t\\t<ion-title>Tambah Kegiatan</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-grid>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\tKategori\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t<ion-select [(ngModel)]=\\\"category\\\" placeholder=\\\"Pilih Kategory Kegiatan\\\" (ionChange)=\\\"getSubCategories()\\\">\\n\\t\\t\\t\\t\\t<ion-select-option *ngFor=\\\"let category of categories\\\" (ionSelect)=\\\"setCategory(category.id)\\\" value=\\\"{{ category.id }}\\\">{{ category.name }}</ion-select-option>\\n\\t\\t\\t\\t</ion-select>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t<ion-select [(ngModel)]=\\\"sub_category\\\" placeholder=\\\"Pilih Kegiatan\\\">\\n\\t\\t\\t\\t\\t<ion-select-option *ngFor=\\\"let sub_category of sub_categories\\\" (ionSelect)=\\\"setSubCategory(sub_category.id)\\\" value=\\\"{{ sub_category.id }}\\\">{{ sub_category.name }}</ion-select-option>\\n\\t\\t\\t\\t</ion-select>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t\\t<hr/>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\tLainnya\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t<ion-toggle [(ngModel)]=\\\"sub_category_other\\\"></ion-toggle>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t\\t<ion-row *ngIf=\\\"sub_category_other\\\">\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-input [(ngModel)]=\\\"sub_category_other_input\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col>\\n\\t\\t\\t\\t<ion-button color=\\\"danger\\\" (click)=\\\"addTodo()\\\">Simpan</ion-button>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t</ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddtodoPage } from './addtodo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddtodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddtodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddtodoPageRoutingModule } from './addtodo-routing.module';\n\nimport { AddtodoPage } from './addtodo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddtodoPageRoutingModule\n  ],\n  declarations: [AddtodoPage]\n})\nexport class AddtodoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHRvZG8vYWRkdG9kby5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { api_base_url } from 'src/config';\nimport { ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Plugins } from '@capacitor/core';\nconst { Storage } = Plugins;\n\n@Component({\n  selector: 'app-addtodo',\n  templateUrl: './addtodo.page.html',\n  styleUrls: ['./addtodo.page.scss'],\n})\n\nexport class AddtodoPage implements OnInit {\n\n  id = null\n  categories: any\n  category: null\n  sub_categories: any\n  sub_category: null\n  sub_category_other: null\n  sub_category_other_input: null\n\n  user = {\n    id: null,\n    name: null,\n    email: null,\n    password: null,\n    phone: null,\n    api_token: null,\n    date_of_birth: null,\n    gender: null,\n    hospital_id: null\n  }\n\n  constructor(private activatedRoute: ActivatedRoute, private http: HttpClient, public toastController: ToastController, public router: Router) { }\n\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.getUser()\n    this.getCategories()\n  }\n\n  getCategories() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer 123\"\n    });\n\n    let options = { headers: headers };\n\n    this.http.post(api_base_url + '/todo/category', {}, options).subscribe(resp => {\n      this.proccess(resp)\n    }, err => {\n      this.showError(err)\n    });\n  }\n\n  getSubCategories() {\n    console.log(this.category)\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer 123\"\n    });\n\n    let options = { headers: headers };\n\n    this.http.post(api_base_url + '/todo/sub-category', { todo_category_id: this.category }, options).subscribe(resp => {\n      this.proccess_sub(resp)\n    }, err => {\n      this.showError(err)\n    });\n  }\n\n  proccess(resp) {\n    this.categories = resp.data\n  }\n\n  proccess_sub(resp) {\n    this.sub_categories = resp.data\n  }\n\n  setCategory(id) {\n    //alert(id)\n  }\n\n  async showError(err) {\n    const toast = await this.toastController.create({\n      message: err,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  addTodo() {\n    if (this.category == undefined) {\n      this.showError(\"Harus pilih kategori\")\n      return\n    }\n\n    if (this.sub_category_other == undefined && this.sub_category == undefined) {\n      this.showError(\"Harus pilih sub kategori\")\n      return\n    }\n\n    if (this.sub_category_other != undefined && this.sub_category_other_input == undefined) {\n      this.showError(\"Harus isi sub kategori lainnya\")\n      return\n    }\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.user.api_token\n    });\n\n    let options = { headers: headers };\n\n    this.http.post(api_base_url + '/todo/add', { id: this.id, category_id: this.category, sub_category_id: this.sub_category, sub_category_other: this.sub_category_other, sub_category_other_input: this.sub_category_other_input }, options).subscribe(resp => {\n      this.proccess_todo(resp)\n    }, err => {\n      this.showError(err)\n    });\n\n  }\n\n  proccess_todo(resp) {\n    this.router.navigate(['/journaldetail', this.id])\n  }\n\n  async getUser() {\n    const ret = await Storage.get({ key: 'user' });\n    this.user = JSON.parse(ret.value);\n  }\n\n}\n"]}