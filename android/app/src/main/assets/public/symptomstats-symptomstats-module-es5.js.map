{"version":3,"sources":["webpack:///src/app/symptomstats/symptomstats.page.html","webpack:///src/app/symptomstats/symptomstats-routing.module.ts","webpack:///src/app/symptomstats/symptomstats.module.ts","webpack:///src/app/symptomstats/symptomstats.page.scss","webpack:///src/app/symptomstats/symptomstats.page.ts"],"names":["routes","path","component","SymptomstatsPageRoutingModule","imports","forChild","exports","SymptomstatsPageModule","declarations","Storage","SymptomstatsPage","activatedRoute","http","toastController","router","id","stats","user","name","email","password","phone","api_token","date_of_birth","gender","hospital_id","snapshot","paramMap","get","getUser","getStats","key","ret","JSON","parse","value","headers","options","post","subscribe","resp","proccess","err","showError","data","selector","template"],"mappings":"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","file":"symptomstats-symptomstats-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"danger\\\">\\n\\t\\t<ion-title>Grafik Pemerikasaan Gejala</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<div *ngFor=\\\"let stat of stats\\\" style=\\\"margin:10px\\\" class=\\\"bar\\\">\\n\\t\\t<div class=\\\"text\\\">\\n\\t\\t\\t<b>{{ stat.symptom_name }}</b>\\n\\t\\t\\t<span style=\\\"float:right\\\">{{ stat.total }} / 10</span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"barBar\\\" style=\\\"background:grey\\\">\\n\\t\\t\\t<div style=\\\"background:blue; width:{{ stat.total/10*100 }}%\\\">&nbsp;</div>\\n\\t\\t</div>\\n\\t</div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SymptomstatsPage } from './symptomstats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SymptomstatsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SymptomstatsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SymptomstatsPageRoutingModule } from './symptomstats-routing.module';\n\nimport { SymptomstatsPage } from './symptomstats.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SymptomstatsPageRoutingModule\n  ],\n  declarations: [SymptomstatsPage]\n})\nexport class SymptomstatsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5bXB0b21zdGF0cy9zeW1wdG9tc3RhdHMucGFnZS5zY3NzIn0= */\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nimport { api_base_url } from 'src/config';\nconst { Storage } = Plugins;\n\n@Component({\n  selector: 'app-symptomstats',\n  templateUrl: './symptomstats.page.html',\n  styleUrls: ['./symptomstats.page.scss'],\n})\n\nexport class SymptomstatsPage implements OnInit {\n\n  id = null\n\n  stats = []\n\n  user = {\n    id: null,\n    name: null,\n    email: null,\n    password: null,\n    phone: null,\n    api_token: null,\n    date_of_birth: null,\n    gender: null,\n    hospital_id: null\n  }\n\n  constructor(private activatedRoute: ActivatedRoute, private http: HttpClient, public toastController: ToastController, public router: Router) { }\n\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.getUser()\n  }\n\n  ionViewWillEnter() {\n    this.getStats()\n  }\n\n  async getUser() {\n    const ret = await Storage.get({ key: 'user' });\n    this.user = JSON.parse(ret.value);\n  }\n\n  getStats() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.user.api_token\n    });\n\n    let options = { headers: headers };\n\n    this.http.post(api_base_url + '/symptom/stats/' + this.id, {}, options).subscribe(resp => {\n      this.proccess(resp)\n    }, err => {\n      this.showError(err)\n    });\n\n  }\n\n  proccess(resp) {\n    this.stats = resp.data\n  }\n  \n  showError(err){\n\n  }\n\n}\n"]}